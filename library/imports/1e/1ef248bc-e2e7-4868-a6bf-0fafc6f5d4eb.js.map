{"version":3,"sources":["assets\\game\\scripts\\UI\\Item\\ConfigItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nimport { EditorManager } from \"../../Manager/EditorManager\";\r\nimport TeacherPanel from \"../panel/TeacherPanel\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ConfigItem extends cc.Component {\r\n\r\n    @property(cc.Label)\r\n    private lbl_index: cc.Label = null;\r\n    @property(cc.Label)\r\n    private lbl_type: cc.Label = null;\r\n    @property(cc.EditBox)\r\n    private editCount: cc.EditBox = null;\r\n    @property(cc.Node)\r\n    private typePanel: cc.Node = null;\r\n    @property(cc.Node)\r\n    private teacherPanel: cc.Node = null;\r\n    \r\n    public index: number = 0;\r\n    private typeName: string[] = [\"平行\",\"垂直\",\"直角\",\"锐角\",\"钝角\"];\r\n\r\n    public init(index: number) {\r\n        this.index = index;\r\n        let gameData = EditorManager.editorData.itemData;\r\n        this.lbl_index.string = \"(\" + (this.index + 1) + \")\";\r\n        this.lbl_type.string = this.typeName[gameData[this.index].type];\r\n        this.editCount.string = gameData[this.index].count.toString();\r\n        this.typePanel.active = false;\r\n    }\r\n\r\n    private onEditCountChange() {\r\n        let count = Number(this.editCount.string);\r\n        if (count < 1 || this.editCount.string == \"\") {\r\n            count = 1;            \r\n        }\r\n        this.editCount.string = count.toString();\r\n        EditorManager.editorData.itemData[this.index].count = count;\r\n    }\r\n\r\n    private onClickChangeType() {\r\n        this.typePanel.active = !this.typePanel.active;\r\n    }\r\n\r\n    private onClickType(event: cc.Event.EventTouch, customData: string) {\r\n        let index = Number(customData);\r\n        EditorManager.editorData.itemData[this.index].type = index;\r\n        this.lbl_type.string = this.typeName[index];\r\n        this.typePanel.active = false;\r\n    }\r\n\r\n    private onClickDelete() {\r\n        EditorManager.editorData.itemData.splice(this.index, 1);\r\n        this.teacherPanel.getComponent(TeacherPanel).updateItemPanel();\r\n    }\r\n}\r\n"]}