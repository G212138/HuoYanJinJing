{"version":3,"sources":["assets\\game\\scripts\\Components\\ButtonSync.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["/**\r\n * v2.0\r\n * Author: jinhailiang\r\n * Email: jinhailiang@tal.com\r\n */\r\n\r\nimport { T2M } from '../../../frame/scripts/SDK/T2M';\r\nimport { GameManager } from '../Manager/GameManager';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ButtonSync extends cc.Component {\r\n\r\n    @property({ type: cc.SpriteFrame })\r\n    private normalSprite: cc.SpriteFrame = null;\r\n\r\n    @property({ type: cc.SpriteFrame })\r\n    private seclectSprite: cc.SpriteFrame = null;\r\n\r\n    @property({ type: cc.Sprite })\r\n    private target: cc.Sprite = null;\r\n\r\n    @property({ type: [cc.Component.EventHandler] })\r\n    private touchStartEvents: cc.Component.EventHandler[] = [];\r\n    @property({ type: [cc.Component.EventHandler] })\r\n    private touchEndEvents: cc.Component.EventHandler[] = [];\r\n    @property\r\n    private isScale: number = 1;\r\n\r\n    private tagId: string;\r\n    private isEnable: boolean = true;\r\n\r\n    //是否已经点击\r\n    private isTouched: boolean = false;\r\n\r\n    public set seclect(boolean: boolean) {\r\n        this.node.getComponent(cc.Sprite).spriteFrame = boolean ? this.seclectSprite : this.normalSprite;\r\n    }\r\n\r\n    onLoad() {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEnd, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEnd, this);\r\n        this.tagId = this.node.name + this.node.parent.name + this.node.getSiblingIndex();\r\n        this.addEventByT2M();\r\n    }\r\n\r\n    public setEnable(isEnable: boolean) {\r\n        this.isEnable = isEnable;\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.isTouched = false;\r\n    }\r\n\r\n    public addTouchEvent(target: cc.Node, component: string, handlers: string[], isScale: number = 1) {\r\n        this.touchStartEvents.push(new ButtonSync.EventHandler());\r\n        this.touchStartEvents[0].target = target;\r\n        this.touchStartEvents[0].component = component;\r\n        this.touchStartEvents[0].handler = handlers[0];\r\n\r\n        this.touchEndEvents.push(new ButtonSync.EventHandler());\r\n        this.touchEndEvents[0].target = target;\r\n        this.touchEndEvents[0].component = component;\r\n        this.touchEndEvents[0].handler = handlers[1];\r\n\r\n        this.isScale = isScale;\r\n    }\r\n\r\n    private touchStart(event: cc.Event.EventTouch) {\r\n        if (!this.isEnable) return;\r\n        if (this.isTouched) {\r\n            return;\r\n        }\r\n        this.isTouched = true;\r\n        let type = 'touchStart' + this.tagId;\r\n        let pos = event.getLocation();\r\n        let data = { pos: { x: pos.x, y: pos.y } };\r\n        T2M.dispatch(type, data);\r\n    }\r\n\r\n    private touchEnd(event: cc.Event.EventTouch) {\r\n        if (!this.isEnable) return;\r\n        let type = 'touchEnd' + this.tagId;\r\n        let pos = event.getLocation();\r\n        let data = { pos: { x: pos.x, y: pos.y } };\r\n        T2M.dispatch(type, data);\r\n    }\r\n\r\n    private addEventByT2M() {\r\n        T2M.addSyncEventListener('touchStart' + this.tagId, this.touchStartHandler.bind(this));\r\n        T2M.addSyncEventListener('touchEnd' + this.tagId, this.touchEndHandler.bind(this));\r\n    }\r\n\r\n    private touchStartHandler(data) {\r\n\r\n        if (!this.target) {\r\n            this.node.scale = this.isScale;\r\n        } else {\r\n            this.target.spriteFrame = this.seclectSprite;\r\n        }\r\n\r\n        this.isTouched = true;\r\n        for (let eventHandler of this.touchStartEvents) {\r\n            eventHandler.emit([{ target: this.node, pos: data.pos }]);\r\n        }\r\n    }\r\n\r\n    private touchEndHandler(data) {\r\n        if (!this.isTouched) {\r\n            return;\r\n        }\r\n        if (!this.target) {\r\n            this.node.scale = 1;\r\n        } else {\r\n            this.target.spriteFrame = this.normalSprite;\r\n        }\r\n        this.isTouched = false;\r\n        for (let eventHandler of this.touchEndEvents) {\r\n            eventHandler.emit([{ target: this.node, pos: data.pos }]);\r\n        }\r\n    }\r\n}\r\n"]}